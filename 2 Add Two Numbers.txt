/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0, sum = 0, s1, s2;
        ListNode * ans = NULL;
        ListNode * head = NULL;
        while (l1 || l2) {
            s1 = 0;
            s2 = 0;
            
            if (l1){
                s1 = l1->val;
                l1 = l1->next;
            }
            
            if (l2) {
                s2 = l2->val;
                l2 = l2->next;
            }
            
            sum = (s1 + s2 + carry) % 10;
            carry = (s1 + s2 + carry) / 10;
            
            if (!head) {
                head = new ListNode(sum);
                ans = head;
            }
            else {
                head->next = new ListNode(sum);
                head = head->next;
            }
        }
        if (carry > 0) {
            head->next = new ListNode(carry);
        }
        return ans;
    }
};