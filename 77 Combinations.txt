class Solution {
public:
    vector<vector<int>> combine(int n, int k) {
        vector<int> arr, cur;
        for (int i = 1; i <= n; i++) {
            arr.push_back(i);
        }
        vector<vector<int>> ans;
        
        dfs(ans, arr, k, cur, 0);
        return ans;
    }
    void dfs(vector<vector<int>>& ans, vector<int>& arr, int k, vector<int>& cur, int idx) {
        if (cur.size() == k) {
            ans.push_back(cur);
            return;
        }
        for (int i = idx; i < arr.size(); i++) {
            cur.push_back(arr[i]);
            dfs(ans, arr, k, cur, i+1);
            cur.pop_back();
        }
    }
};