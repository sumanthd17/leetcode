/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidBST(TreeNode* root) {
        TreeNode* ptr = nullptr;
        return check(root, ptr);
    }
    bool check(TreeNode* root, TreeNode*& prev) {
        if (root != nullptr) {
            if (!check(root->left, prev)) return false;
            if(prev != nullptr && root->val <= prev->val) return false;
            prev = root;
            if (!check(root->right, prev)) return false;
        }
        return true;
    }
};