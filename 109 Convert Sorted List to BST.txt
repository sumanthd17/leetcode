/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        int len = 0;
        ListNode* ptr = head;
        while (head != NULL) {
            len++;
            head = head->next;
        }
        return createTree(ptr, 0, len-1);
    }
    
    TreeNode* createTree(ListNode* head, int l, int r) {
        if (l > r) return NULL;
        int mid = l + (r-l) / 2;
        ListNode* ptr = head;
        for (int i = 0; i < mid; i++)
            ptr = ptr->next;
        TreeNode* root = new TreeNode(ptr->val);
        root->left = createTree(head, l, mid-1);
        root->right = createTree(head, mid+1, r);
        return root;
    }
};