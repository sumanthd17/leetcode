/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        queue<TreeNode*> q;
        vector<vector<int>> ans;
        if (root == NULL) return ans;
        q.push(root);
        TreeNode* cur;
        while(!q.empty()) {
            vector<int> level;
            int n = q.size();
            for (int i = 0; i < n; i++) {
                cur = q.front();
                q.pop();
                if (cur == NULL) continue; 
                level.push_back(cur->val);
                q.push(cur->left);
                q.push(cur->right);
            }
            if (level.size() >= 1)
                ans.push_back(level);
        }
        return ans;
    }
};