/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (head == NULL || head->next == NULL) return head;
        int l = 0;
        ListNode* ptr = head;
        while(ptr) {
            l++;
            ptr = ptr->next;
        }
        k = k % l;
        if (k == 0)
            return head;
        for (int i = 0; i < k; i++)
            head = move(head, l);
        return head;
    }
    ListNode* move(ListNode* head, int l) {
        ListNode* node = new ListNode();
        ListNode* ptr = head;
        for (int i = 0; i < l-2; i++) {
            head = head->next;
        }
        node->val = head->next->val;
        head->next = NULL;
        node->next = ptr;
        return node;
    }
};