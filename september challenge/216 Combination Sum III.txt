class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> ans;
        vector<int> cur;
        dfs(ans, 1, k, n, cur);
        return ans;
    }
    void dfs(vector<vector<int>>& ans, int index, int size, int sum, vector<int>& cur) {
        if (cur.size() == size) {
            if (sum == 0)
                ans.push_back(cur);

            return;
        }
        
        for (int i = index; i <= 9; i++) {
            cur.push_back(i);
            dfs(ans, i+1, size, sum-i, cur);
            cur.pop_back();
        }
    }
};