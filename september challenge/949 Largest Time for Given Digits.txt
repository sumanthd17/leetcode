bool valid(string& time) {
    if (time[0]>'2') return false;
    if (time[0]=='2')
        if (time[1]>='4') return false;
    if (time[2]>='6') return false;
    return true;
}

class Solution {
public:
    string largestTimeFromDigits(vector<int>& A) {
        sort(A.begin(),A.end());
        string max = "";
        string temp (4,'0');
        do {
            for (int i = 0;i<4;i++) temp[i] = A[i]+'0';
            if (valid(temp) && max.compare(temp)<0) 
                max = temp;
        } while ( next_permutation(A.begin(),A.end()));
        if (max.size()>0) max.insert(max.begin()+2,':');
        return max;
    }
};