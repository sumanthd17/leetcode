/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if (!root) return ans;
        
        queue<TreeNode*> q;
        int direction = 0;
        q.push(root);
        TreeNode* cur;
        int len = q.size();
        
        while(!q.empty()) {
            len = q.size();
            vector<int> row;
            for (int i = 0; i < len; i++) {
                cur = q.front();
                q.pop();
                if (cur == NULL) continue; 
                row.push_back(cur->val);
                q.push(cur->left);
                q.push(cur->right);
            }
            if (direction)
                reverse(row.begin(), row.end());
            direction = direction ? 0 : 1;
            if (row.size())
                ans.push_back(row);
        }
        return ans;
    }
};