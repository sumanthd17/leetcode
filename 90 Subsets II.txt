class Solution {
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> ans;
        vector<int> cur;
        sort(nums.begin(), nums.end());
        dfs(ans, nums, cur, 0);
        return ans;
    }
    void dfs(vector<vector<int>>& ans, vector<int>& nums, vector<int>& cur, int id) {
        for (int i = 0; i < ans.size(); i++) {
            // sort(cur.begin(), cur.end());
            // sort(ans[i].begin(), ans[i].end());
            if (cur == ans[i])
            return;
        }
        ans.push_back(cur);
        for (int i = id; i < nums.size(); i++) {
            cur.push_back(nums[i]);
            dfs(ans, nums, cur, i+1);
            cur.pop_back();
        }
    }
};