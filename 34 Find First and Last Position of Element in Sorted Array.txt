class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        int left, right;
        left = binary(nums, 0, nums.size()-1, target, false, -1);
        right = binary(nums, 0, nums.size()-1, target, true, -1);
        ans.push_back(left);
        ans.push_back(right);
        return ans;
    }
    int binary(vector<int>& nums, int l, int r, int target, bool flag, int result) {
        if (l <= r) {
            int mid = l + (r - l) / 2;
            if (target == nums[mid]) {
                result = mid;
                if (!flag)
                    result = binary(nums, l, mid-1, target, flag, result);
                else
                    result = binary(nums, mid+1, r, target, flag, result);
            }
            else if (target < nums[mid]) {
                result = binary(nums, l, mid-1, target, flag, result);
            }
            else if (target > nums[mid]) {
                result = binary(nums, mid+1, r, target, flag, result);
            }   
        }
        return result;
    }
};